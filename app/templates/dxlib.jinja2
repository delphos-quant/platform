{% extends "layout.jinja2" %}

{% block additional_styles %}
    <link rel="stylesheet" href="{{ url_for('static', filename='styles/markdown.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='styles/highlighting.css') }}">
{% endblock %}

{% block content %}
    <h1 id="quantitative-analysis-library">Quantitative Analysis library</h1>
    <p>This library contains basic methods, interfaces, and integration calls for statistical tools, as well as data
        gathering functions.</p>
    <h2 id="installation">Installation</h2>
    <p>Use the package manager <a href="https://pip.pypa.io/en/stable/">pip</a> to install dxlib.</p>
    <pre><code class="lang-bash">pip <span class="hljs-keyword">install</span> dxlib
</code></pre>
    <h2 id="quickstart">Quickstart</h2>
    <h3 id="research-module">Research Module</h3>
    <pre><code class="lang-python"><span class="hljs-title">from</span> dxlib <span class="hljs-keyword">import</span> finite_differences

<span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np
<span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt

<span class="hljs-title">x</span> = np.arange(<span class="hljs-number">-3</span>, <span
                class="hljs-number">3</span>, <span class="hljs-number">0.1</span>)
<span class="hljs-title">y</span> = np.tanh(x)

<span class="hljs-title">dy</span> = finite_differences(x, y)
<span class="hljs-title">plt</span>.plot(x, dy)
<span class="hljs-title">plt</span>.show()
</code></pre>
    <h3 id="simulation-module">Simulation Module</h3>
    <p>[Note: The Simulation Module's example needs to be provided]</p>
    <h3 id="trading-module">Trading Module</h3>
    <pre><code class="lang-python">from dxlib.models import trading

<span class="hljs-built_in">features</span>, <span class="hljs-built_in">labels</span> = trading.prepare_data(data)
train, test = trading.train_test_split(<span class="hljs-built_in">features</span>, <span
                class="hljs-built_in">labels</span>, <span class="hljs-number">0.5</span>)
clf = trading.train_model(train[<span class="hljs-string">"x"</span>], train[<span class="hljs-string">"y"</span>])
y_pred = trading.predict_model(clf, <span class="hljs-built_in">features</span>)
pred_changes, returns = trading.simulate_trade_allocation(y_pred, basis)
<span class="hljs-built_in">print</span>(f<span class="hljs-string">"Predicted changes: {pred_changes}, \nReturns: {returns}"</span>)
</code></pre>
    <p>Sample Output:</p>
    <pre><code>Predicted <span class="hljs-keyword">change</span><span class="hljs-variable">s:</span> [<span
            class="hljs-number">0.01</span>, -<span class="hljs-number">0.02</span>, <span
            class="hljs-number">0.03</span>, ...]
Return<span class="hljs-variable">s:</span> <span class="hljs-number">0.07</span>
</code></pre><h3 id="api-module">API Module</h3>
    <pre><code class="lang-python">from dxlib<span class="hljs-selector-class">.api</span> import AlphaVantageAPI as av

<span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-string">"Realtime exchange rates from the last 5 minutes:"</span>)</span></span>

alpha_vantage = av(<span class="hljs-string">"&lt;api_key&gt;"</span>)
<span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> range(<span
                class="hljs-number">5</span>):
  currencies_to_query = [<span class="hljs-string">'JPY'</span>, <span class="hljs-string">'EUR'</span>, <span
                class="hljs-string">'GBP'</span>, <span class="hljs-string">'CAD'</span>, <span
                class="hljs-string">'AUD'</span>]
  exchange_rates_df = alpha_vantage.fetch_currency_exchange_rates(currencies_to_query)
  print(exchange_rates_df)
  <span class="hljs-selector-tag">time</span>.sleep(<span class="hljs-number">60</span>)
</code></pre>
    <p>Sample Output:</p>
    <pre><code><span class="hljs-selector-tag">Realtime</span> <span class="hljs-selector-tag">exchange</span> <span
            class="hljs-selector-tag">rates</span> <span class="hljs-selector-tag">from</span> <span
            class="hljs-selector-tag">the</span> <span class="hljs-selector-tag">last</span> 5 <span
            class="hljs-selector-tag">minutes</span>:
   <span class="hljs-selector-tag">JPY</span>     <span class="hljs-selector-tag">EUR</span>     <span
                class="hljs-selector-tag">GBP</span>     <span class="hljs-selector-tag">CAD</span>     <span
                class="hljs-selector-tag">AUD</span>
0  103<span class="hljs-selector-class">.76</span>  0<span class="hljs-selector-class">.83</span>   0<span
                class="hljs-selector-class">.72</span>   1<span class="hljs-selector-class">.27</span>   1<span
                class="hljs-selector-class">.32</span>
1  103<span class="hljs-selector-class">.76</span>  0<span class="hljs-selector-class">.83</span>   0<span
                class="hljs-selector-class">.72</span>   1<span class="hljs-selector-class">.27</span>   1<span
                class="hljs-selector-class">.32</span>
2  103<span class="hljs-selector-class">.75</span>  0<span class="hljs-selector-class">.83</span>   0<span
                class="hljs-selector-class">.72</span>   1<span class="hljs-selector-class">.27</span>   1<span
                class="hljs-selector-class">.32</span>
3  103<span class="hljs-selector-class">.76</span>  0<span class="hljs-selector-class">.83</span>   0<span
                class="hljs-selector-class">.72</span>   1<span class="hljs-selector-class">.27</span>   1<span
                class="hljs-selector-class">.32</span>
4  103<span class="hljs-selector-class">.77</span>  0<span class="hljs-selector-class">.83</span>   0<span
                class="hljs-selector-class">.72</span>   1<span class="hljs-selector-class">.27</span>   1<span
                class="hljs-selector-class">.32</span>
</code></pre><h3 id="data-module">Data Module</h3>
    <p>...</p>
    <p>Note: In the finite differences method, the numerical values for the differentiation at the point x are returned,
        and
        a visual graph of the finite differences can be plotted using matplotlib.
        For the API module, replace &quot;<api_key/>&quot; with your AlphaVantage API key. The module will fetch
        real-time
        exchange rates for the past five minutes for the specified currencies.
    </p>
    <h2 id="contribution">Contribution</h2>
    <p>Contributions are welcome! If you're interested in contributing, feel free to fork the repository and submit a
        pull request. Please make sure to test the changes thoroughly. We're looking forward to your enhancements!</p>
{% endblock %}